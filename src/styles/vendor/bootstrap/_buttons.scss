// stylelint-disable selector-no-qualifying-type

//
// Base styles
//

.btn {
  cursor: pointer;
  display: inline-block;
  font-family: $font-family-proximia-regular;
  font-weight: $btn-font-weight;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: $btn-border-width solid transparent;
  border-radius: 10px;
  opacity: .5;
  @include button-size($btn-padding-y, $btn-padding-x, $btn-font-size, $btn-line-height, $btn-border-radius-lg);
  @include transition($btn-transition);

  // Share hover and focus styles
  @include hover-focus {
    text-decoration: none;
    opacity: 1;
  }

  &:focus,
  &.focus {
    outline: 0;
    box-shadow: $btn-focus-box-shadow;
  }

  // Disabled comes first so active can properly restyle
  &.disabled,
  &:disabled {
    @include box-shadow(none);
  }

  // Opinionated: add "hand" cursor to non-disabled .btn elements
  &:not(:disabled):not(.disabled) {
    cursor: pointer;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active {
    background-image: none;
    @include box-shadow($btn-active-box-shadow);

    &:focus {
      @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
    }
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
  pointer-events: none;
}


//
// Alternate buttons
//

@each $color, $value in $theme-colors {
  .btn-#{$color} {
    @include button-variant($value, $value);

    &.disabled,
    &:disabled {
      background-color: $gray-300;
      border-color: $gray-300;
      color: #fff;
      pointer-events: none;
    }
  }
}

@each $color, $value in $theme-colors {
  .btn-outline-#{$color} {
    @include button-outline-variant($value);
  }
}

.btn-outline-gradient {
  background:
    linear-gradient($gray-dark,$gray-dark) padding-box /* Don't extend this to border */,
    linear-gradient(to left, #f96318, #c63d90 49%, #cdcdcd) border-box; /*Border-box is not need as it's the default value*/
  border: 2px dashed $gray-dark;
}

.btn-order {
  color: #fff;
  opacity: 1;
}

.btn-white, .btn-white:hover {
  color: $orange;
  background: $white;
}


.btn-wire {
  border: 1px solid rgba($orange, 0.5);
  color: red;

  &:hover {
    border-color: $orange;
  }
}


.btn-wide {
  display: block;
  width: 100%;
}


//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: $font-weight-normal;
  color: $link-color;
  background-color: transparent;

  @include hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
    border-color: transparent;
  }

  &:focus,
  &.focus {
    text-decoration: $link-hover-decoration;
    border-color: transparent;
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
    pointer-events: none;
  }

  // No need for an active state here
}


//
// Button Sizes
//

.btn-lg {
  font-family: $font-family-proximia-bold;
  font-weight: bold;
  font-style: normal;
  letter-spacing: 0.03em;
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $font-size-lg, $btn-line-height-lg, $btn-border-radius-lg);
}

.btn-sm {
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $font-size-sm, $btn-line-height-sm, $btn-border-radius-sm);
}

.btn-extra {
  font-family: $font-family-proximia-regular;
  font-weight: 400;
  font-style: normal;
  opacity: 1;
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $font-size-lg, $btn-line-height-lg, $btn-border-radius-lg);
}

//
// Block button
//

.btn-block {
  display: block;
  width: 100%;

  // Vertically space out multiple block buttons
  + .btn-block {
    margin-top: $btn-block-spacing-y;
  }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}

.btn-rounded {
  border-radius: 10rem;
}

.btn-active {
  cursor: default!important;
  pointer-events: none;
}
